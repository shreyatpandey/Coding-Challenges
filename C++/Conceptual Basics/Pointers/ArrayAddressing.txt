Question-1:-
#include <stdio.h>
int main()
{
    int arr[5] = {1,2,3,4};
    printf("%p\n",arr);
    printf("%p\n",(arr+1));
    return 0;
}
// Output:- 
0x7fff44cb4240
0x7fff44cb4244
Address would always be = Original Address + sizeof(datatype)

Question-2:-
#include <stdio.h>
int main()
{
    int arr[4] = {1,2,3,4};
    printf("%x\n",*(arr)+1); //2 
    printf("%x\n",*(arr+1));//2
    printf("%x\n",*(arr+3));//4
    printf("%x\n",*(arr+4));//0

    return 0;
}
//Output
2
2
4
0

Question-3:-
#include<stdio.h>
int main()
{
    char *B[8]; //array of pointers
    double *D[5]; //array of pointers
    int **R[9]; //array of pointers , size would be 8 bytes itself
    printf("%d\n",sizeof(B));
    printf("%d\n",sizeof(D));
    return 0;
}
// Output
64
40
Reason:- size of pointer is say 8 bytes. 
Then char *B[8] is 8x8= 64 , double *D[5] is 8x5 = 40 bytes

** Formula for array-addressing:- startingaddress + L.i at ith index **




