Q1] What is the effect of deleting a NULL pointer?
A: Compile-time error
B: Run-time error
C: No effect
D: Memory corruption
Ans:- C

Q2] Give the output of the following:
int main()
{
  float a = 5;
  switch(a)
 {
   case 5: cout<<"5"<<endl;
    Default:cout<<"B<<endl; 
  }
  return 0;
}
Ans:- switch cannot take float value

Q3] What is the output of the following below code?
#include <bits/stdc++.h>
using namespace std;
class ABC
{
    public:
     int &j;
     ABC(int &val):j(val){}
};
int main()
{
    int k = 100;
    ABC o1(k);
    k = 150;
    cout<<o1.j<<" "<<k<<endl;
    return 0;
}

Q4] Will destructor be called in the below program?
#include <bits/stdc++.h>
using namespace std;

class A
{
  public:
   ~A()
   {
       cout<<"destroy";
   }  
};
int main()
{
    vector<A*>*vec1 = new vector<A*>;
    vector<A>*vec2 = new vector<A>;
    return 0;
}
Ans:- No, it will not be called

Q5] Give the output of the following code?
int main()
{
   vector<int>numbers = {1,2,3,4,5,6,7,8};
    auto first = numbers.begin();
    auto second = numbers.end();
    cout<<*first<<","<<second<<endl;
    return 0;
}
Options:-
A: 1,8
B: 1,9
C: Undefined behavior
D: Program will not compile

Q6]
int main()
{
   vector<int>numbers = {1,2,3,4,5,6,7,8};
    auto first = numbers.begin();
    auto second = numbers.end();
     numbers.push_back(9);
    cout<<*first<<endl;
    return 0;
}
Ans:- Here the output would be 1

Q7] What would be the output of the following program?
void update(int* ptr)
{
ptr = new int();
*ptr = 10;
}
int main()
{
  int* ptr = new int();
  *ptr = 55;
   update(ptr);
   cout<<*ptr<<endl;
   return 0;
}

Q8] Regarding map in STL, which of the following is true?
a: Map can only have built in data type 
b: Value can only have build in data type
c: Map can have user defined data type but it has to be overloaded with '<' data type
Ans:- C

Q9] Which of the following is correct regarding C++ data members?
A: Static members are not members of the class
B: const members are not members of the class
C: Friend functions are not members of the class
D: virtual functions are not members of the class
Ans:- C
A friend function is a function that isn't a member of a class but has access to the class's private and protected members.

Q 10] Give the output of the following code
#include <iostream>
using namespace std;

int i;
void increment(int i)
{
    i++;
}

int main()
{
    for(i=0;i<10;increment(i))
    {
        
    }
    std::cout <<i<< std::endl;
    return 0;
}
Ans:- This code will run forever

Q 11] Will the following piece of code run in C?
struct Member
{
  int m;
  char b;
  static int d;
};

int main()
{
    static int d = 10;
    printf("sizeof(d):%ld\n",sizeof(d));
    struct Member m;
    printf("sizeof(m):%ld\n",sizeof(m));
    return 0;
}
Ans:- No, in C , struct members cannot have static member field.
However this would compile in C++ environment.


